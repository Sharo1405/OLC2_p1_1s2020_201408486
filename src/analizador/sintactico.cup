package analizador;

import java.util.LinkedList;
import java.util.ArrayList;
import java_cup.runtime.*;
import Errores.*;

parser code
{://Codigo de acciones
  //Codigo visible
    
    //public ASTfs arbol;
    public ArrayList<ErrorE> errorSintactico = new ArrayList<>();
    
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int columna = s.right;
        int fila = s.left;
        
        System.out.println("!!!!!!!---- Error Sintactico Recuperado ----!!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        String aux = "Error Sintactico Recuperado: " + "\t\tLexema: "+lexema + " \t\tFila: "+fila +" \t\tColumna: "+columna;
        errorSintactico.add(new ErrorE(aux));
    }

   
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
        String lexema = s.value.toString();
        int columna = s.right;
        int fila = s.left;
        
        System.err.println("Error caracter no esperado");
        System.err.println(s);
        System.out.println("!!!!!!! Error Sintactico, Panic Mode!!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);  
        
        String aux1 = "Error Sintactico, Modo Panico: " + "\t\tLexema: "+lexema + " \t\tFila: "+fila +" \t\tColumna: "+columna;
        errorSintactico.add(new ErrorE(aux1));
    }
:}

action code
{://Codigo de acciones
      
:}


terminal String iff, elsee, switchh, casee, breakk, defaultt, whilee, print,forr, doo, truee, falsee, inn, continuee, returnn, functionn, c;
terminal String listt, typeoff, lengthh, nCol, arrayy, nrow, stringlength, removee, tolowercase, touppercase, trunkk, roundd;
terminal String meann, mediann, modee, nulo, matrix, pie, barplot, plot, hist;

terminal String allave, cllave, acorchete, ccorchete, aparentesis, cparentesis, igual, suma, resta, por, division;
terminal String potencia, modulo, mayorq, menorq, mayorigualq, menorigualq, igualigual, diferente, interrogacion;
terminal String and, or, not, dospuntos, puntoycoma, coma, flecha, unegativo, upositivo;
terminal String cadena, ERnumero, ERdecimal, id;


nonterminal S;
nonterminal CUERPO;
nonterminal SENTENCIA;
nonterminal BLOQUESENTENCIAS;
nonterminal DECLARACIONES, IFSTATEMENT, IF_LISTA;
nonterminal SWITCHSTATEMENT, SWITCHBLOCKSTATEMENTGROUPS, SWITCHBLOCKSTATEMENTGRO, SWITCHLABELS, SWITCHLABEL;
nonterminal WHILEE, DOWHILE;
nonterminal SENTENCIATRANSFERENCIA, FUNCIONESMETODOS;
nonterminal FORR, INICIALIZACION;
nonterminal LLAMADASFUNCIONES, IMPRIMIR;
nonterminal FUNCIONESLENGUAJE, LISTACORCHETES, E, MODIFICADORVALOR;
nonterminal GRAFICAS ;


//PRECEDENCIA------------------------------------------------------------------------------------------------------------------
precedence left coma;
precedence left c, typeoff, lengthh, nCol, nrow, stringlength, removee,tolowercase, touppercase, trunkk, roundd, meann, mediann, modee;                   
precedence left id;
precedence right acorchete, aparentesis;
precedence left aparentesis, acorchete;
precedence right unegativo, upositivo;
precedence right not;
precedence left potencia;
precedence left por,division, modulo;
precedence left suma, resta;
precedence left mayorq, menorq, menorigualq, mayorigualq;
precedence left igualigual, diferente;
precedence left and;
precedence left or;
precedence left interrogacion, dospuntos;
//------------------------------------------------------------------------------------------------------------------------------



start with S;
 
S::= CUERPO{::};

CUERPO::= CUERPO SENTENCIA {::}
         |SENTENCIA {::};

SENTENCIA::= DECLARACIONES{::}
       | DECLARACIONES puntoycoma {::}
       /*| MODIFICADORVALOR {::}
       | MODIFICADORVALOR puntoycoma{::}*/
       | IFSTATEMENT{::}
       | SWITCHSTATEMENT{::}
       | WHILEE{::}
       | DOWHILE puntoycoma{::}
       | DOWHILE{::}
       | FORR{::}
       | SENTENCIATRANSFERENCIA puntoycoma{::}
       | SENTENCIATRANSFERENCIA{::}
       | FUNCIONESMETODOS{::}
       | LLAMADASFUNCIONES{::}
       | LLAMADASFUNCIONES puntoycoma{::}
       | IMPRIMIR {::}
       | IMPRIMIR puntoycoma{::}
       | FUNCIONESLENGUAJE{::}
       | GRAFICAS{::};


GRAFICAS::= pie E {::}
           |barplot E {::}//8 dispersion y 5 lineas
           |plot E {::}
           |hist E {::};


//MODIFICADORVALOR::= id LISTACORCHETES igual E {::};


LISTACORCHETES::= E {::}; 
                /*LISTACORCHETES acorchete E ccorchete {::}
                 |acorchete E ccorchete{::};*/





IMPRIMIR::= print aparentesis E cparentesis{::};


LLAMADASFUNCIONES::= id aparentesis E cparentesis{::} 
                   | id aparentesis cparentesis{::};


FUNCIONESMETODOS::= id igual functionn aparentesis cparentesis BLOQUESENTENCIAS{::}
                   |id igual functionn E BLOQUESENTENCIAS{::}
                   |id igual aparentesis cparentesis flecha BLOQUESENTENCIAS{::}
                   |id igual E flecha BLOQUESENTENCIAS{::};

FORR::= forr aparentesis INICIALIZACION cparentesis BLOQUESENTENCIAS{::};

INICIALIZACION::= id inn E {::};
                 


WHILEE::= whilee aparentesis E cparentesis BLOQUESENTENCIAS{::};

DOWHILE::= doo BLOQUESENTENCIAS whilee aparentesis E cparentesis{::};





SWITCHSTATEMENT::= switchh aparentesis E cparentesis allave SWITCHBLOCKSTATEMENTGROUPS SWITCHLABELS cllave{::}
                 | switchh aparentesis E cparentesis allave SWITCHBLOCKSTATEMENTGROUPS cllave{::}
                 | switchh aparentesis E cparentesis allave SWITCHLABELS cllave{::}
                 | switchh aparentesis E cparentesis allave cllave{::};

SWITCHBLOCKSTATEMENTGROUPS::= SWITCHBLOCKSTATEMENTGRO{::}
                            | SWITCHBLOCKSTATEMENTGROUPS SWITCHBLOCKSTATEMENTGRO{::};

SWITCHBLOCKSTATEMENTGRO::= SWITCHLABELS CUERPO{::};

SENTENCIATRANSFERENCIA::= continuee{::}
                        | breakk{::}
                        | returnn{::}
                        | returnn E{::};

SWITCHLABELS::= SWITCHLABELS SWITCHLABEL{::}
              | SWITCHLABEL{::};

SWITCHLABEL::= casee E dospuntos{::}
             | defaultt dospuntos{::};




IFSTATEMENT::= IF_LISTA  elsee  BLOQUESENTENCIAS{::}
             | IF_LISTA{::};

IF_LISTA::= iff aparentesis E cparentesis BLOQUESENTENCIAS{::}
          | IF_LISTA elsee iff aparentesis E cparentesis BLOQUESENTENCIAS{::};

DECLARACIONES::= id igual E{::}
                |id LISTACORCHETES igual E {::};




BLOQUESENTENCIAS::= allave  CUERPO cllave{::}
                   |allave cllave{::};


E::= resta E:e1 {::} %prec unegativo 
    |suma E:e1 {::} %prec upositivo
    |not E:e1{::}
    |E:e1 or:s E:e2{::}
    |E:e1 and:s E:e2{::}
    |E:e1 suma:s E:e2 {::}
    |E:e1 resta:s E:e2 {::}
    |E:e1 por:s E:e2 {::}
    |E:e1 division:s E:e2 {::}
    |E:e1 potencia:s E:e2 {::}
    |E modulo E {::}
    |E:e1 mayorq:s E:e2{::}
    |E:e1 menorq:s E:e2{::}
    |E:e1 mayorigualq:s E:e2{::}
    |E:e1 menorigualq:s E:e2{::}
    |E:e1 igualigual:s E:e2{::}
    |E:e1 diferente:s E:e2{::} 
    |E:cond interrogacion E:vdd dospuntos E:fake {::}
    |E coma E {::}
    |E coma {::}
    |coma E {::}
    |acorchete E ccorchete {::}
    |acorchete E ccorchete E {::}
    |aparentesis E cparentesis{::}
    |aparentesis E cparentesis E{::}
    |FUNCIONESLENGUAJE{::}
    |listt E {::}
    |matrix E {::}
    |arrayy E {::}
    |ERnumero{::}
    |ERdecimal{::}
    |cadena{::}
    |id{::}
    |id E {::}
    |truee{::}
    |falsee{::}
    |nulo{::};

FUNCIONESLENGUAJE::= c aparentesis E cparentesis{::}
                    |typeoff E{::}
                    |lengthh E{::}
                    |nCol E{::}
                    |nrow E{::}
                    |stringlength E{::}
                    |removee E{::} //2 parametros
                    |tolowercase E{::}
                    |touppercase E{::}
                    |trunkk E{::}
                    |roundd E{::}
                    |meann E{::}
                    |mediann E{::}
                    |modee E{::};