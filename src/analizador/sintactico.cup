package analizador;

import java.util.LinkedList;
import java.util.ArrayList;
import java_cup.runtime.*;
import Errores.*;

parser code
{://Codigo de acciones
  //Codigo visible
    
    //public ASTfs arbol;
    public ArrayList<ErrorE> errorSintactico = new ArrayList<>();
    
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int columna = s.right;
        int fila = s.left;
        
        System.out.println("!!!!!!!---- Error Sintactico Recuperado ----!!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        String aux = "Error Sintactico Recuperado: " + "\t\tLexema: "+lexema + " \t\tFila: "+fila +" \t\tColumna: "+columna;
        errorSintactico.add(new ErrorE(aux));
    }

   
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
        String lexema = s.value.toString();
        int columna = s.right;
        int fila = s.left;
        
        System.err.println("Error caracter no esperado");
        System.err.println(s);
        System.out.println("!!!!!!! Error Sintactico, Panic Mode!!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);  
        
        String aux1 = "Error Sintactico, Modo Panico: " + "\t\tLexema: "+lexema + " \t\tFila: "+fila +" \t\tColumna: "+columna;
        errorSintactico.add(new ErrorE(aux1));
    }
:}

action code
{://Codigo de acciones
      
:}


terminal String iff, elsee, switchh, casee, breakk, whilee,forr, doo, truee, falsee, inn, continuee, returnn, functionn, nulo, defaultt;
//terminal String c, listt, typeoff, lengthh, nCol, arrayy, nrow, stringlength, removee, tolowercase, touppercase, trunkk, roundd;
//terminal String meann, mediann, modee, matrix, pie, barplot, plot, hist, print;

terminal String allave, cllave, acorchete, ccorchete, aparentesis, cparentesis, igual, suma, resta, por, division;
terminal String potencia, modulo, mayorq, menorq, mayorigualq, menorigualq, igualigual, diferente, interrogacion;
terminal String and, or, not, dospuntos, puntoycoma, coma, flecha, unegativo, upositivo;
terminal String cadena, ERnumero, ERdecimal, id;


nonterminal S;
nonterminal CUERPO;
nonterminal SENTENCIA;
nonterminal BLOQUESENTENCIAS;
nonterminal DECLARACIONES, IFSSS, IF_LISTA;
nonterminal SWITCHH, SWITCHBLOQUESUPS, SWITCHBLOQUES, SWITCHCASEDEFAULTS, SWITCHCASEDEFAULT;
nonterminal WHILEE, DOWHILE;
nonterminal SENTENCIATRANSFERENCIA;
nonterminal FORR, INICIALIZACION;
nonterminal E;
nonterminal EIZQUIERDA, EDERECHA;
nonterminal FACTORIZANDO, FUNCIONESMETODOSDECLARACIONES;


//PRECEDENCIA------------------------------------------------------------------------------------------------------------------
precedence left defaultt;
precedence left coma;
//precedence left igual;
precedence right interrogacion, dospuntos;
precedence left or;
precedence left and;
precedence left igualigual, diferente;
precedence left mayorq, menorq, menorigualq, mayorigualq;
precedence left suma, resta;
precedence left por,division, modulo;
precedence left potencia;
precedence right unegativo, upositivo;
precedence right not;
precedence right acorchete, aparentesis;
precedence left id;
//------------------------------------------------------------------------------------------------------------------------------



start with S;
 
S::= CUERPO{::};

CUERPO::= CUERPO SENTENCIA {::}
         |SENTENCIA {::};
 
SENTENCIA::= FACTORIZANDO{::}            
       | IFSSS{::}
       | SWITCHH{::}
       | WHILEE{::}
       | DOWHILE puntoycoma{::}
       | DOWHILE{::}
       | FORR{::}
       | SENTENCIATRANSFERENCIA puntoycoma{::}
       | SENTENCIATRANSFERENCIA{::};     
       
         




FORR::= forr aparentesis INICIALIZACION cparentesis BLOQUESENTENCIAS{::};

INICIALIZACION::= id inn E {::};
                 


WHILEE::= whilee aparentesis E cparentesis BLOQUESENTENCIAS{::};

DOWHILE::= doo BLOQUESENTENCIAS whilee aparentesis E cparentesis{::};





SWITCHH::= switchh aparentesis E cparentesis allave SWITCHBLOQUESUPS SWITCHCASEDEFAULTS cllave{::}
          | switchh aparentesis E cparentesis allave SWITCHBLOQUESUPS cllave{::}
          | switchh aparentesis E cparentesis allave SWITCHCASEDEFAULTS cllave{::}
          | switchh aparentesis E cparentesis allave cllave{::};



SWITCHBLOQUESUPS::= SWITCHBLOQUES{::}
                  | SWITCHBLOQUESUPS SWITCHBLOQUES{::};

SWITCHBLOQUES::= SWITCHCASEDEFAULTS CUERPO{::};

SENTENCIATRANSFERENCIA::= continuee{::}
                        | breakk{::}
                        | returnn{::}
                        | returnn aparentesis E cparentesis{::};

SWITCHCASEDEFAULTS::= SWITCHCASEDEFAULTS SWITCHCASEDEFAULT{::}
              | SWITCHCASEDEFAULT{::};

SWITCHCASEDEFAULT::= casee E dospuntos{::}
             | defaultt dospuntos {::}; 




IFSSS::= IF_LISTA  elsee  BLOQUESENTENCIAS{::}
             | IF_LISTA{::};

IF_LISTA::= iff aparentesis E cparentesis BLOQUESENTENCIAS{::}
          | IF_LISTA elsee iff aparentesis E cparentesis BLOQUESENTENCIAS{::};



FACTORIZANDO::= id igual FUNCIONESMETODOSDECLARACIONES {::}

               |id acorchete E coma ccorchete igual E{::}
               |id acorchete coma E ccorchete igual E{::} 
               |id acorchete E coma ccorchete igual E puntoycoma{::}
               |id acorchete coma E ccorchete igual E puntoycoma{::} 

               |id aparentesis E cparentesis{::}  //llamadas a funciones
               |id aparentesis cparentesis{::} //llamadas a funciones
               |id aparentesis E cparentesis puntoycoma{::}  //llamadas a funciones
               |id aparentesis cparentesis puntoycoma{::} //llamadas a funciones

               |id acorchete E ccorchete EIZQUIERDA igual E {::}
               |id acorchete acorchete E ccorchete ccorchete EIZQUIERDA igual E {::}
               |id acorchete E ccorchete EIZQUIERDA igual E puntoycoma{::}
               |id acorchete acorchete E ccorchete ccorchete EIZQUIERDA igual E puntoycoma{::};



FUNCIONESMETODOSDECLARACIONES::= functionn aparentesis cparentesis BLOQUESENTENCIAS{::}
                   |functionn aparentesis E cparentesis BLOQUESENTENCIAS{::}
                   |aparentesis cparentesis flecha BLOQUESENTENCIAS{::}
                   |aparentesis E cparentesis flecha BLOQUESENTENCIAS{::}
                   |E {::}
                   |E puntoycoma{::};


                        

BLOQUESENTENCIAS::= allave CUERPO cllave{::}
                   |allave cllave{::};


EIZQUIERDA::= EIZQUIERDA acorchete E ccorchete {::}            
            | EIZQUIERDA acorchete acorchete E ccorchete ccorchete {::}
            | ;

EDERECHA::= EDERECHA acorchete E ccorchete {::}            
          | EDERECHA acorchete acorchete E ccorchete ccorchete {::}
          | EDERECHA aparentesis E cparentesis {::}
          | EDERECHA acorchete E coma ccorchete {::}
          | EDERECHA acorchete coma E ccorchete {::}
          | ;


E::= resta E:e1 {::} %prec unegativo 
    |suma E:e1 {::} %prec upositivo  
    |not E:e1{::} 
    |E coma E {::}
    |E:e1 or:s E:e2{::}  
    |E:e1 and:s E:e2{::}  
    |E:e1 suma:s E:e2 {::}  
    |E:e1 resta:s E:e2 {::}  
    |E:e1 por:s E:e2 {::}  
    |E:e1 division:s E:e2 {::}
    |E:e1 potencia:s E:e2 {::} 
    |E modulo E {::} 
    |E:e1 mayorq:s E:e2{::}  
    |E:e1 menorq:s E:e2{::}  
    |E:e1 mayorigualq:s E:e2{::}  
    |E:e1 menorigualq:s E:e2{::}  
    |E:e1 igualigual:s E:e2{::}  
    |E:e1 diferente:s E:e2{::}   
    |E:cond interrogacion E:vdd dospuntos E:fake {::}    
    |aparentesis E cparentesis
    |ERnumero{::}
    |ERdecimal{::}
    |cadena{::}
    |truee{::}
    |falsee{::}
    |nulo{::} 
    |defaultt {::}    

    |id EDERECHA {::}
    |DECLARACIONES{::};

DECLARACIONES::= id igual E{::};